{
  "Xperience Page Builder Widget": {
    "prefix": ["xpc-page-builder-widget"],
    "description": "An Xperience by Kentico Page Builder Widget",
    "isFileTemplate": true,
    "body": [
      "using System.Threading.Tasks;",
      "using Kentico.Xperience.Admin.Base;",
      "using Kentico.Xperience.Admin.Base.FormAnnotations;",
      "using Kentico.PageBuilder.Web.Mvc;",
      "using Microsoft.AspNetCore.Mvc;",
      "using ${1:MySite.Admin};",
      "",
      "[assembly: RegisterWidget(",
      "    identifier: ${TM_FILENAME_BASE}.IDENTIFIER,",
      "    viewComponentType: typeof(${TM_FILENAME_BASE}),",
      "    name: \"${TM_FILENAME_BASE/([a-zA-Z])(?=[A-Z])/${1} /g}\",",
      "    propertiesType: typeof(${TM_FILENAME_BASE}Properties),",
      "    Description = \"A ${TM_FILENAME_BASE/([a-zA-Z])(?=[A-Z])/${1} /g}.\",",
      "    IconClass = Icons.CustomElement)]",
      "",
      "namespace ${1};",
      "",
      "public class ${TM_FILENAME_BASE} : ViewComponent",
      "{",
      "    public const string IDENTIFIER = \"${1/[\\.]/-/g}.${TM_FILENAME_BASE/([a-zA-Z])(?=[A-Z])/${1}-/g}\";",
      "",
      "    public ${TM_FILENAME_BASE}() { }",
      "",
      "    public async Task<IViewComponentResult> InvokeAsync(ComponentViewModel<${TM_FILENAME_BASE}Properties> cvm)",
      "    {",
      "        var vm = new ${TM_FILENAME_BASE}ViewModel(cvm.Properties);",
      "",
      "        return View(vm);",
      "    }",
      "",
      "}",
      "",
      "public class ${TM_FILENAME_BASE}Properties : IWidgetProperties",
      "{",
      "    [TextInputComponent(",
      "        Label = \"Label\",",
      "        ExplanationText = \"A custom label\",",
      "        Tooltip = \"Enter a label\",",
      "        Order = 1)]",
      "    public string Label { get; set; } = \"\";",
      "}",
      "",
      "public class ${TM_FILENAME_BASE}ViewModel",
      "{",
      "    public ${TM_FILENAME_BASE}ViewModel(${TM_FILENAME_BASE}Properties props)",
      "    {",
      "        Label = props.Label;",
      "    }",
      "",
      "    public string Label { get; }",
      "}",
      ""
    ]
  },
  "Xperience Page Builder Section": {
    "prefix": ["xpc-page-builder-section"],
    "description": "An Xperience by Kentico Page Builder Section",
    "isFileTemplate": true,
    "body": [
      "using System.Threading.Tasks;",
      "using Kentico.Xperience.Admin.Base;",
      "using Kentico.Xperience.Admin.Base.FormAnnotations;",
      "using Kentico.PageBuilder.Web.Mvc;",
      "using Microsoft.AspNetCore.Mvc;",
      "using ${1:MySite.Admin};",
      "",
      "[assembly: RegisterSection(",
      "    identifier: ${TM_FILENAME_BASE}.IDENTIFIER,",
      "    viewComponentType: typeof(${TM_FILENAME_BASE}),",
      "    name: \"${TM_FILENAME_BASE/([a-zA-Z])(?=[A-Z])/${1} /g}\",",
      "    propertiesType: typeof(${TM_FILENAME_BASE}Properties),",
      "    Description = \"A ${TM_FILENAME_BASE/([a-zA-Z])(?=[A-Z])/${1} /g}.\",",
      "    IconClass = Icons.CustomElement)]",
      "",
      "namespace ${1};",
      "",
      "public class ${TM_FILENAME_BASE} : ViewComponent",
      "{",
      "    public const string IDENTIFIER = \"${1/[\\.]/-/g}.${TM_FILENAME_BASE/([a-zA-Z])(?=[A-Z])/${1}-/g}\";",
      "",
      "    public ${TM_FILENAME_BASE}() { }",
      "",
      "    public async Task<IViewComponentResult> InvokeAsync(ComponentViewModel<${TM_FILENAME_BASE}Properties> cvm)",
      "    {",
      "        var vm = new ${TM_FILENAME_BASE}ViewModel(cvm.Properties);",
      "",
      "        return View(vm);",
      "    }",
      "",
      "}",
      "",
      "public class ${TM_FILENAME_BASE}Properties : ISectionProperties",
      "{",
      "    [TextInputComponent(",
      "        Label = \"Label\",",
      "        ExplanationText = \"A custom label\",",
      "        Tooltip = \"Enter a label\",",
      "        Order = 1)]",
      "    public string Label { get; set; } = \"\";",
      "}",
      "",
      "public class ${TM_FILENAME_BASE}ViewModel",
      "{",
      "    public ${TM_FILENAME_BASE}ViewModel(${TM_FILENAME_BASE}Properties props)",
      "    {",
      "        Label = props.Label;",
      "    }",
      "",
      "    public string Label { get; }",
      "}",
      ""
    ]
  }
}
